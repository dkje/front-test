[{"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\reportWebVitals.ts":"1","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\AtiveStatusSlice.ts":"2","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\RacingBarChart.tsx":"3","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\List.style.tsx":"4","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\components\\ChartContainer.tsx":"5","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\hooks\\useResizeObserver.ts":"6","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\utils\\awaitAnoterFecthDone.ts":"7","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\api\\FetchTime.ts":"8","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\ActiveVisitors5mSlice.ts":"9","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\app\\App.tsx":"10","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\styles\\globalStyle.ts":"11","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\InformaticsChart\\projectInfoSlice.ts":"12","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\utils\\sleep.ts":"13","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\app\\rootReducer.ts":"14","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\hooks\\useCheckResponseStatus.ts":"15","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\components\\ChartContainer.tsx":"16","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\api\\api.ts":"17","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\DataInfoList.tsx":"18","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ErrorContainer.tsx":"19","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\LineChartWrapper.tsx":"20","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\Label.tsx":"21","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ChartTitle.styled.tsx":"22","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\utils\\setLastFetchTime.ts":"23","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\RacingBarChartWrapper.tsx":"24","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\index.tsx":"25","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\app\\store.ts":"26","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\InformaticsChart\\InformaticsChart.tsx":"27","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\hooks\\useMapColor.ts":"28","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ChartErrorWrapper.tsx":"29","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\components\\ChartContainer.tsx":"30"},{"size":440,"mtime":1612195106174,"results":"31","hashOfConfig":"32"},{"size":2900,"mtime":1613479187464,"results":"33","hashOfConfig":"32"},{"size":3213,"mtime":1612320198165,"results":"34","hashOfConfig":"32"},{"size":806,"mtime":1612195106167,"results":"35","hashOfConfig":"32"},{"size":749,"mtime":1612456943601,"results":"36","hashOfConfig":"32"},{"size":636,"mtime":1612195106163,"results":"37","hashOfConfig":"32"},{"size":336,"mtime":1613479187456,"results":"38","hashOfConfig":"32"},{"size":933,"mtime":1613479187453,"results":"39","hashOfConfig":"32"},{"size":2351,"mtime":1613482672871,"results":"40","hashOfConfig":"32"},{"size":589,"mtime":1613555496767,"results":"41","hashOfConfig":"32"},{"size":767,"mtime":1612195106175,"results":"42","hashOfConfig":"32"},{"size":2744,"mtime":1613479187461,"results":"43","hashOfConfig":"32"},{"size":101,"mtime":1613479187457,"results":"44","hashOfConfig":"32"},{"size":659,"mtime":1613565652475,"results":"45","hashOfConfig":"32"},{"size":889,"mtime":1612456943594,"results":"46","hashOfConfig":"32"},{"size":457,"mtime":1612320198167,"results":"47","hashOfConfig":"32"},{"size":3374,"mtime":1613565195646,"results":"48","hashOfConfig":"32"},{"size":1242,"mtime":1613564843291,"results":"49","hashOfConfig":"32"},{"size":399,"mtime":1612320198159,"results":"50","hashOfConfig":"32"},{"size":2715,"mtime":1612456943599,"results":"51","hashOfConfig":"32"},{"size":1755,"mtime":1613565108374,"results":"52","hashOfConfig":"32"},{"size":265,"mtime":1612195106167,"results":"53","hashOfConfig":"32"},{"size":172,"mtime":1613479187456,"results":"54","hashOfConfig":"32"},{"size":2027,"mtime":1613564916653,"results":"55","hashOfConfig":"32"},{"size":1219,"mtime":1612195106173,"results":"56","hashOfConfig":"32"},{"size":269,"mtime":1612195106162,"results":"57","hashOfConfig":"32"},{"size":1425,"mtime":1613479187459,"results":"58","hashOfConfig":"32"},{"size":1220,"mtime":1613563594682,"results":"59","hashOfConfig":"32"},{"size":389,"mtime":1612320198159,"results":"60","hashOfConfig":"32"},{"size":266,"mtime":1613563633116,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"121ii",{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\reportWebVitals.ts",[],["130","131"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\AtiveStatusSlice.ts",["132","133"],"import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport api from \"api/api\";\r\nimport { awiatAnotherFetchDone } from \"common/utils/awaitAnoterFecthDone\";\r\nimport { setLastFetchTime } from \"common/utils/setLastFetchTime\";\r\nimport { SpotInnerState, SpotResponse } from \"../type\";\r\n\r\nexport interface ActiveStatusState {\r\n  activeMethod: SpotInnerState;\r\n  activeSQL: SpotInnerState;\r\n  activeHttpCall: SpotInnerState;\r\n  activeDBConnection: SpotInnerState;\r\n  activeSocket: SpotInnerState;\r\n}\r\n\r\nconst singleInitialValue = { value: null, lastTime: Date.now(), error: false };\r\n\r\nexport const initialState: ActiveStatusState = {\r\n  activeMethod: { ...singleInitialValue },\r\n  activeSQL: { ...singleInitialValue },\r\n  activeHttpCall: { ...singleInitialValue },\r\n  activeDBConnection: { ...singleInitialValue },\r\n  activeSocket: { ...singleInitialValue },\r\n};\r\n\r\ntype Apis = \"act_method\" | \"act_sql\" | \"act_httpc\" | \"act_dbc\" | \"act_socket\";\r\n\r\nconst apisMapping: [Apis, keyof ActiveStatusState][] = [\r\n  [\"act_method\", \"activeMethod\"],\r\n  [\"act_sql\", \"activeSQL\"],\r\n  [\"act_httpc\", \"activeHttpCall\"],\r\n  [\"act_dbc\", \"activeDBConnection\"],\r\n  [\"act_socket\", \"activeSocket\"],\r\n];\r\n\r\nconst activeStatusName = \"activeStatusInfo\";\r\n\r\nconst fetchActiveStatus = createAsyncThunk(\r\n  `${activeStatusName}/fetchActiveStatus`,\r\n  async () => {\r\n    const payload = await Promise.allSettled(\r\n      apisMapping.map(([key]) => {\r\n        return api.spot(key);\r\n      })\r\n    );\r\n    return payload;\r\n  }\r\n);\r\n\r\nconst activeStatusSlice = createSlice({\r\n  name: activeStatusName,\r\n  initialState: initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    // [fetchActiveStatus.pending.type]: (state: ActiveStatusState) => {},\r\n    [fetchActiveStatus.fulfilled.type]: (\r\n      state: ActiveStatusState,\r\n      { payload }: PayloadAction<SpotResponse[]>\r\n    ) => {\r\n      for (let response of payload) {\r\n        const stateType = apisMapping.find(\r\n          ([key]) => key === response.value?.key\r\n        );\r\n\r\n        if (!stateType || !response.value) continue;\r\n        const stateOfResponse = state[stateType[1]];\r\n        if (!stateOfResponse) continue;\r\n\r\n        if (response.value.error) {\r\n          stateOfResponse.error = true;\r\n          stateOfResponse.statusCode = response.value.statusCode;\r\n        } else {\r\n          stateOfResponse.error = false;\r\n          stateOfResponse.value = response.value.data;\r\n          stateOfResponse.statusCode = undefined;\r\n        }\r\n\r\n        stateOfResponse.lastTime = response.value.lastTime;\r\n      }\r\n    },\r\n    [fetchActiveStatus.rejected.type]: (\r\n      state: ActiveStatusState,\r\n      { payload }: PayloadAction<SpotResponse[]>\r\n    ) => {\r\n      console.log(\"projectInfoFetch Error\");\r\n      console.log(payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  fetchActiveStatus,\r\n};\r\n\r\nexport default activeStatusSlice;\r\n","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\RacingBarChart.tsx",[],["134","135"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\List.style.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\components\\ChartContainer.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\hooks\\useResizeObserver.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\utils\\awaitAnoterFecthDone.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\api\\FetchTime.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\ActiveVisitors5mSlice.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\app\\App.tsx",["136","137","138"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\styles\\globalStyle.ts",[],["139","140"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\InformaticsChart\\projectInfoSlice.ts",["141","142","143","144"],"import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport api from \"api/api\";\r\nimport { FetchTime } from \"api/FetchTime\";\r\nimport { awiatAnotherFetchDone } from \"common/utils/awaitAnoterFecthDone\";\r\nimport { setLastFetchTime } from \"common/utils/setLastFetchTime\";\r\nimport { sleep } from \"common/utils/sleep\";\r\nimport { SpotInnerState, SpotResponse } from \"../type\";\r\n\r\nexport interface ProjectInfoState {\r\n  cpuCore: SpotInnerState;\r\n  host: SpotInnerState;\r\n  inactAgent: SpotInnerState;\r\n  rtime: SpotInnerState;\r\n}\r\n\r\nconst singleInitialValue = { value: null, lastTime: Date.now(), error: false };\r\n\r\nexport const initialState: ProjectInfoState = {\r\n  cpuCore: { ...singleInitialValue },\r\n  host: { ...singleInitialValue },\r\n  inactAgent: { ...singleInitialValue },\r\n  rtime: { ...singleInitialValue },\r\n};\r\n\r\ntype Apis = \"cpucore\" | \"host\" | \"inact_agent\" | \"rtime\";\r\n\r\nconst apisMapping: [Apis, keyof ProjectInfoState][] = [\r\n  [\"cpucore\", \"cpuCore\"],\r\n  [\"host\", \"host\"],\r\n  [\"inact_agent\", \"inactAgent\"],\r\n  [\"rtime\", \"rtime\"],\r\n];\r\n\r\nconst projectInfoName = \"projectInfo\";\r\n\r\nconst fetchProjectInfo = createAsyncThunk(\r\n  `${projectInfoName}/fetchProjectInfo`,\r\n  async () => {\r\n    const payload = await Promise.allSettled(\r\n      apisMapping.map(([key]) => {\r\n        return api.spot(key);\r\n      })\r\n    );\r\n    return payload;\r\n  }\r\n);\r\n\r\nconst projectInfoSlice = createSlice({\r\n  name: projectInfoName,\r\n  initialState: initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchProjectInfo.pending.type]: (state: ProjectInfoState) => {},\r\n    [fetchProjectInfo.fulfilled.type]: (\r\n      state: ProjectInfoState,\r\n      { payload }: PayloadAction<SpotResponse[]>\r\n    ) => {\r\n      for (let response of payload) {\r\n        const stateType = apisMapping.find(\r\n          ([key]) => key === response.value?.key\r\n        );\r\n\r\n        if (!stateType || !response.value) continue;\r\n        const stateOfResponse = state[stateType[1]];\r\n        if (!stateOfResponse) continue;\r\n\r\n        if (response.value.error) {\r\n          stateOfResponse.error = true;\r\n          stateOfResponse.statusCode = response.value.statusCode;\r\n        } else {\r\n          stateOfResponse.error = false;\r\n          stateOfResponse.value = response.value.data;\r\n          stateOfResponse.statusCode = undefined;\r\n        }\r\n\r\n        stateOfResponse.lastTime = response.value.lastTime;\r\n      }\r\n    },\r\n    [fetchProjectInfo.rejected.type]: (\r\n      state: ProjectInfoState,\r\n      { payload }: PayloadAction<SpotResponse[]>\r\n    ) => {\r\n      console.log(\"projectInfoFetch Error\");\r\n      console.log(payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  fetchProjectInfo,\r\n};\r\n\r\nexport default projectInfoSlice;\r\n","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\utils\\sleep.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\app\\rootReducer.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\hooks\\useCheckResponseStatus.ts",["145"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst useCheckResponseStatus = (activeStatus: { statusCode?: number }[]) => {\r\n  const [isServerError, setIsServerError] = useState<boolean>(false);\r\n  const [isRequestError, setIsRequestError] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    let isRequestErrorContains = false;\r\n    let isServerErrorContains = false;\r\n    activeStatus.forEach((el) => {\r\n      if (!el.statusCode) return;\r\n      if (el.statusCode >= 500 && el.statusCode < 600) {\r\n        isServerErrorContains = true;\r\n      }\r\n      if (el.statusCode >= 400 && el.statusCode < 500) {\r\n        isRequestErrorContains = true;\r\n      }\r\n      setIsServerError(isServerErrorContains);\r\n      setIsRequestError(isRequestErrorContains);\r\n    });\r\n  }, [activeStatus]);\r\n\r\n  return { isServerError, isRequestError };\r\n};\r\n\r\nexport default useCheckResponseStatus;\r\n",["146","147"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\components\\ChartContainer.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\api\\api.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\DataInfoList.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ErrorContainer.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\LineChartWrapper.tsx",["148","149"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\Label.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ChartTitle.styled.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\utils\\setLastFetchTime.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\RacingBarChartWrapper.tsx",["150"],"import React, { useEffect } from \"react\";\r\nimport { RootState } from \"app/rootReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport BorderConatiner from \"components/BorderContainer.style\";\r\nimport ChartTitle from \"components/ChartTitle.styled\";\r\nimport RacingBarChart from \"./RacingBarChart\";\r\nimport { ActiveStatusState, actions } from \"./AtiveStatusSlice\";\r\nimport ChartContainer from \"components/ChartContainer\";\r\nimport ChartErrorWrapper from \"components/ChartErrorWrapper\";\r\nimport ServerErrorFooter from \"components/ErrorFooter\";\r\nimport useCheckResponseStatus from \"common/hooks/useCheckResponseStatus\";\r\n\r\nconst RacingBarChartWrapper: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const activeStatusMapper: [keyof ActiveStatusState, string][] = [\r\n    [\"activeDBConnection\", \"DBC\"],\r\n    [\"activeHttpCall\", \"HTTPC\"],\r\n    [\"activeMethod\", \"METHOD\"],\r\n    [\"activeSQL\", \"SQL\"],\r\n    [\"activeSocket\", \"SOCKET\"],\r\n  ];\r\n\r\n  const activeStatus = useSelector((state: RootState) =>\r\n    activeStatusMapper.map(([stateType, title]) => ({\r\n      value: state.activeStatus[stateType]?.value ?? 0,\r\n      title,\r\n      statusCode: state.activeStatus[stateType].statusCode,\r\n    }))\r\n  );\r\n\r\n  const { isServerError, isRequestError } = useCheckResponseStatus(\r\n    activeStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchActiveStatus());\r\n    const intervalId = setInterval(() => {\r\n      dispatch(actions.fetchActiveStatus());\r\n    }, 10000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <BorderConatiner>\r\n      <ChartContainer>\r\n        <ChartTitle>액티브 스테이터스</ChartTitle>\r\n        <ChartErrorWrapper>\r\n          <RacingBarChart activeStatus={activeStatus} />\r\n        </ChartErrorWrapper>\r\n        {isServerError && <ServerErrorFooter type={\"ServerError\"} />}\r\n        {isRequestError && <ServerErrorFooter type={\"RequestError\"} />}\r\n      </ChartContainer>\r\n    </BorderConatiner>\r\n  );\r\n};\r\n\r\nexport default RacingBarChartWrapper;\r\n","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\index.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\app\\store.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\InformaticsChart\\InformaticsChart.tsx",["151"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\hooks\\useMapColor.ts",["152"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ChartErrorWrapper.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\components\\ChartContainer.tsx",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":31},{"ruleId":"157","severity":1,"message":"161","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":26},{"ruleId":"153","replacedBy":"162"},{"ruleId":"155","replacedBy":"163"},{"ruleId":"157","severity":1,"message":"164","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":24},{"ruleId":"157","severity":1,"message":"165","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":29},{"ruleId":"157","severity":1,"message":"166","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":24},{"ruleId":"153","replacedBy":"167"},{"ruleId":"155","replacedBy":"168"},{"ruleId":"157","severity":1,"message":"169","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":31},{"ruleId":"157","severity":1,"message":"161","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":26},{"ruleId":"157","severity":1,"message":"170","line":6,"column":10,"nodeType":"159","messageId":"160","endLine":6,"endColumn":15},{"ruleId":"157","severity":1,"message":"171","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"153","replacedBy":"172"},{"ruleId":"155","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":31,"column":6,"nodeType":"176","endLine":31,"endColumn":21,"suggestions":"177"},{"ruleId":"174","severity":1,"message":"178","line":40,"column":6,"nodeType":"176","endLine":40,"endColumn":8,"suggestions":"179"},{"ruleId":"174","severity":1,"message":"178","line":42,"column":6,"nodeType":"176","endLine":42,"endColumn":8,"suggestions":"180"},{"ruleId":"174","severity":1,"message":"178","line":21,"column":6,"nodeType":"176","endLine":21,"endColumn":8,"suggestions":"181"},{"ruleId":"174","severity":1,"message":"182","line":38,"column":6,"nodeType":"176","endLine":38,"endColumn":31,"suggestions":"183"},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"@typescript-eslint/no-unused-vars","'awiatAnotherFetchDone' is defined but never used.","Identifier","unusedVar","'setLastFetchTime' is defined but never used.",["184"],["185"],"'InformaticsChart' is defined but never used.","'RacingBarChartWrapper' is defined but never used.","'LineChartWrapper' is defined but never used.",["184"],["185"],"'FetchTime' is defined but never used.","'sleep' is defined but never used.","'React' is defined but never used.",["184"],["185"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["186"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["187"],["188"],["189"],"React Hook useEffect has a missing dependency: 'exceptions.value?.records'. Either include it or remove the dependency array.",["190"],"no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"193","fix":"195"},{"desc":"193","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [activeVisitor, fetchData]",{"range":"199","text":"200"},"Update the dependencies array to be: [dispatch]",{"range":"201","text":"202"},{"range":"203","text":"202"},{"range":"204","text":"202"},"Update the dependencies array to be: [exceptions.value?.records, exceptions.value?.total]",{"range":"205","text":"206"},[1188,1203],"[activeVisitor, fetchData]",[1408,1410],"[dispatch]",[1539,1541],[748,750],[1130,1155],"[exceptions.value?.records, exceptions.value?.total]"]