[{"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\reportWebVitals.ts":"1","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\AtiveStatusSlice.ts":"2","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\RacingBarChart.tsx":"3","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\List.style.tsx":"4","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\components\\ChartContainer.tsx":"5","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\hooks\\useResizeObserver.ts":"6","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\utils\\awaitAnoterFecthDone.ts":"7","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\api\\FetchTime.ts":"8","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\ActiveVisitors5mSlice.ts":"9","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\app\\App.tsx":"10","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\styles\\globalStyle.ts":"11","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\InformaticsChart\\projectInfoSlice.ts":"12","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\utils\\sleep.ts":"13","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\app\\rootReducer.ts":"14","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\hooks\\useCheckResponseStatus.ts":"15","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\components\\ChartContainer.tsx":"16","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\api\\api.ts":"17","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\DataInfoList.tsx":"18","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ErrorContainer.tsx":"19","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\LineChartWrapper.tsx":"20","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\Label.tsx":"21","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ChartTitle.styled.tsx":"22","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\utils\\setLastFetchTime.ts":"23","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\RacingBarChartWrapper.tsx":"24","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\index.tsx":"25","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\app\\store.ts":"26","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\InformaticsChart\\InformaticsChart.tsx":"27","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\hooks\\useMapColor.ts":"28","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ChartErrorWrapper.tsx":"29","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\components\\ChartContainer.tsx":"30","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\styles\\theme.ts":"31","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\LineChart.tsx":"32","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ChartContainer.tsx":"33","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\hooks\\useGetData.ts":"34","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ErrorFooter.tsx":"35","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\utils\\getPercentage.ts":"36","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\DonutChartWrapper.tsx":"37","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\ExecptionSlice.ts":"38","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\HalfDonutChart\\HalfDonutChart.tsx":"39","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\HalfDonutChart\\HalfDonutChartWrapper.tsx":"40","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\HalfDonutChart\\CpuUsageRateSlice.ts":"41","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\HalfDonutChart\\hook\\useGetData.ts":"42","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\HalfDonutChart\\components\\ChartContainer.tsx":"43","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\DonutChart.tsx":"44","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\hook\\useGetData.ts":"45","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\hook\\useGetData.ts":"46"},{"size":440,"mtime":1612195106174,"results":"47","hashOfConfig":"48"},{"size":2900,"mtime":1613479187464,"results":"49","hashOfConfig":"48"},{"size":3213,"mtime":1612320198165,"results":"50","hashOfConfig":"48"},{"size":806,"mtime":1612195106167,"results":"51","hashOfConfig":"48"},{"size":749,"mtime":1612456943601,"results":"52","hashOfConfig":"48"},{"size":636,"mtime":1612195106163,"results":"53","hashOfConfig":"48"},{"size":336,"mtime":1613611368017,"results":"54","hashOfConfig":"48"},{"size":933,"mtime":1613479187453,"results":"55","hashOfConfig":"48"},{"size":2351,"mtime":1613482672871,"results":"56","hashOfConfig":"48"},{"size":713,"mtime":1613581851061,"results":"57","hashOfConfig":"48"},{"size":767,"mtime":1612195106175,"results":"58","hashOfConfig":"48"},{"size":2744,"mtime":1613479187461,"results":"59","hashOfConfig":"48"},{"size":101,"mtime":1613479187457,"results":"60","hashOfConfig":"48"},{"size":769,"mtime":1613581314200,"results":"61","hashOfConfig":"48"},{"size":889,"mtime":1612456943594,"results":"62","hashOfConfig":"48"},{"size":457,"mtime":1612320198167,"results":"63","hashOfConfig":"48"},{"size":3435,"mtime":1613573300328,"results":"64","hashOfConfig":"48"},{"size":1314,"mtime":1613611507207,"results":"65","hashOfConfig":"48"},{"size":399,"mtime":1612320198159,"results":"66","hashOfConfig":"48"},{"size":1644,"mtime":1613611968124,"results":"67","hashOfConfig":"48"},{"size":1755,"mtime":1613565108374,"results":"68","hashOfConfig":"48"},{"size":265,"mtime":1612195106167,"results":"69","hashOfConfig":"48"},{"size":172,"mtime":1613611373321,"results":"70","hashOfConfig":"48"},{"size":1724,"mtime":1613612050084,"results":"71","hashOfConfig":"48"},{"size":1219,"mtime":1612195106173,"results":"72","hashOfConfig":"48"},{"size":269,"mtime":1612195106162,"results":"73","hashOfConfig":"48"},{"size":1425,"mtime":1613479187459,"results":"74","hashOfConfig":"48"},{"size":1220,"mtime":1613563594682,"results":"75","hashOfConfig":"48"},{"size":389,"mtime":1612320198159,"results":"76","hashOfConfig":"48"},{"size":266,"mtime":1613563633116,"results":"77","hashOfConfig":"48"},{"size":1324,"mtime":1612195106176,"results":"78","hashOfConfig":"48"},{"size":6238,"mtime":1612456943598,"results":"79","hashOfConfig":"48"},{"size":267,"mtime":1613564914660,"results":"80","hashOfConfig":"48"},{"size":838,"mtime":1613563598192,"results":"81","hashOfConfig":"48"},{"size":749,"mtime":1612456943595,"results":"82","hashOfConfig":"48"},{"size":108,"mtime":1613549145700,"results":"83","hashOfConfig":"48"},{"size":1899,"mtime":1613572108825,"results":"84","hashOfConfig":"48"},{"size":2054,"mtime":1613562922255,"results":"85","hashOfConfig":"48"},{"size":3252,"mtime":1613609979121,"results":"86","hashOfConfig":"48"},{"size":1979,"mtime":1613611239042,"results":"87","hashOfConfig":"48"},{"size":1303,"mtime":1613582442461,"results":"88","hashOfConfig":"48"},{"size":394,"mtime":1613574348722,"results":"89","hashOfConfig":"48"},{"size":266,"mtime":1613566893244,"results":"90","hashOfConfig":"48"},{"size":1879,"mtime":1613611598225,"results":"91","hashOfConfig":"48"},{"size":1416,"mtime":1613611885181,"results":"92","hashOfConfig":"48"},{"size":456,"mtime":1613612063830,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"121ii",{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"103"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"103"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"103"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\reportWebVitals.ts",[],["199","200"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\AtiveStatusSlice.ts",["201","202"],"import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport api from \"api/api\";\r\nimport { awiatAnotherFetchDone } from \"common/utils/awaitAnoterFecthDone\";\r\nimport { setLastFetchTime } from \"common/utils/setLastFetchTime\";\r\nimport { SpotInnerState, SpotResponse } from \"../type\";\r\n\r\nexport interface ActiveStatusState {\r\n  activeMethod: SpotInnerState;\r\n  activeSQL: SpotInnerState;\r\n  activeHttpCall: SpotInnerState;\r\n  activeDBConnection: SpotInnerState;\r\n  activeSocket: SpotInnerState;\r\n}\r\n\r\nconst singleInitialValue = { value: null, lastTime: Date.now(), error: false };\r\n\r\nexport const initialState: ActiveStatusState = {\r\n  activeMethod: { ...singleInitialValue },\r\n  activeSQL: { ...singleInitialValue },\r\n  activeHttpCall: { ...singleInitialValue },\r\n  activeDBConnection: { ...singleInitialValue },\r\n  activeSocket: { ...singleInitialValue },\r\n};\r\n\r\ntype Apis = \"act_method\" | \"act_sql\" | \"act_httpc\" | \"act_dbc\" | \"act_socket\";\r\n\r\nconst apisMapping: [Apis, keyof ActiveStatusState][] = [\r\n  [\"act_method\", \"activeMethod\"],\r\n  [\"act_sql\", \"activeSQL\"],\r\n  [\"act_httpc\", \"activeHttpCall\"],\r\n  [\"act_dbc\", \"activeDBConnection\"],\r\n  [\"act_socket\", \"activeSocket\"],\r\n];\r\n\r\nconst activeStatusName = \"activeStatusInfo\";\r\n\r\nconst fetchActiveStatus = createAsyncThunk(\r\n  `${activeStatusName}/fetchActiveStatus`,\r\n  async () => {\r\n    const payload = await Promise.allSettled(\r\n      apisMapping.map(([key]) => {\r\n        return api.spot(key);\r\n      })\r\n    );\r\n    return payload;\r\n  }\r\n);\r\n\r\nconst activeStatusSlice = createSlice({\r\n  name: activeStatusName,\r\n  initialState: initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    // [fetchActiveStatus.pending.type]: (state: ActiveStatusState) => {},\r\n    [fetchActiveStatus.fulfilled.type]: (\r\n      state: ActiveStatusState,\r\n      { payload }: PayloadAction<SpotResponse[]>\r\n    ) => {\r\n      for (let response of payload) {\r\n        const stateType = apisMapping.find(\r\n          ([key]) => key === response.value?.key\r\n        );\r\n\r\n        if (!stateType || !response.value) continue;\r\n        const stateOfResponse = state[stateType[1]];\r\n        if (!stateOfResponse) continue;\r\n\r\n        if (response.value.error) {\r\n          stateOfResponse.error = true;\r\n          stateOfResponse.statusCode = response.value.statusCode;\r\n        } else {\r\n          stateOfResponse.error = false;\r\n          stateOfResponse.value = response.value.data;\r\n          stateOfResponse.statusCode = undefined;\r\n        }\r\n\r\n        stateOfResponse.lastTime = response.value.lastTime;\r\n      }\r\n    },\r\n    [fetchActiveStatus.rejected.type]: (\r\n      state: ActiveStatusState,\r\n      { payload }: PayloadAction<SpotResponse[]>\r\n    ) => {\r\n      console.log(\"projectInfoFetch Error\");\r\n      console.log(payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  fetchActiveStatus,\r\n};\r\n\r\nexport default activeStatusSlice;\r\n",["203","204"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\RacingBarChart.tsx",[],["205","206"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\List.style.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\components\\ChartContainer.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\hooks\\useResizeObserver.ts",[],["207","208"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\utils\\awaitAnoterFecthDone.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\api\\FetchTime.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\ActiveVisitors5mSlice.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\app\\App.tsx",["209","210","211","212"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\styles\\globalStyle.ts",[],["213","214"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\InformaticsChart\\projectInfoSlice.ts",["215","216","217","218"],"import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport api from \"api/api\";\r\nimport { FetchTime } from \"api/FetchTime\";\r\nimport { awiatAnotherFetchDone } from \"common/utils/awaitAnoterFecthDone\";\r\nimport { setLastFetchTime } from \"common/utils/setLastFetchTime\";\r\nimport { sleep } from \"common/utils/sleep\";\r\nimport { SpotInnerState, SpotResponse } from \"../type\";\r\n\r\nexport interface ProjectInfoState {\r\n  cpuCore: SpotInnerState;\r\n  host: SpotInnerState;\r\n  inactAgent: SpotInnerState;\r\n  rtime: SpotInnerState;\r\n}\r\n\r\nconst singleInitialValue = { value: null, lastTime: Date.now(), error: false };\r\n\r\nexport const initialState: ProjectInfoState = {\r\n  cpuCore: { ...singleInitialValue },\r\n  host: { ...singleInitialValue },\r\n  inactAgent: { ...singleInitialValue },\r\n  rtime: { ...singleInitialValue },\r\n};\r\n\r\ntype Apis = \"cpucore\" | \"host\" | \"inact_agent\" | \"rtime\";\r\n\r\nconst apisMapping: [Apis, keyof ProjectInfoState][] = [\r\n  [\"cpucore\", \"cpuCore\"],\r\n  [\"host\", \"host\"],\r\n  [\"inact_agent\", \"inactAgent\"],\r\n  [\"rtime\", \"rtime\"],\r\n];\r\n\r\nconst projectInfoName = \"projectInfo\";\r\n\r\nconst fetchProjectInfo = createAsyncThunk(\r\n  `${projectInfoName}/fetchProjectInfo`,\r\n  async () => {\r\n    const payload = await Promise.allSettled(\r\n      apisMapping.map(([key]) => {\r\n        return api.spot(key);\r\n      })\r\n    );\r\n    return payload;\r\n  }\r\n);\r\n\r\nconst projectInfoSlice = createSlice({\r\n  name: projectInfoName,\r\n  initialState: initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchProjectInfo.pending.type]: (state: ProjectInfoState) => {},\r\n    [fetchProjectInfo.fulfilled.type]: (\r\n      state: ProjectInfoState,\r\n      { payload }: PayloadAction<SpotResponse[]>\r\n    ) => {\r\n      for (let response of payload) {\r\n        const stateType = apisMapping.find(\r\n          ([key]) => key === response.value?.key\r\n        );\r\n\r\n        if (!stateType || !response.value) continue;\r\n        const stateOfResponse = state[stateType[1]];\r\n        if (!stateOfResponse) continue;\r\n\r\n        if (response.value.error) {\r\n          stateOfResponse.error = true;\r\n          stateOfResponse.statusCode = response.value.statusCode;\r\n        } else {\r\n          stateOfResponse.error = false;\r\n          stateOfResponse.value = response.value.data;\r\n          stateOfResponse.statusCode = undefined;\r\n        }\r\n\r\n        stateOfResponse.lastTime = response.value.lastTime;\r\n      }\r\n    },\r\n    [fetchProjectInfo.rejected.type]: (\r\n      state: ProjectInfoState,\r\n      { payload }: PayloadAction<SpotResponse[]>\r\n    ) => {\r\n      console.log(\"projectInfoFetch Error\");\r\n      console.log(payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const actions = {\r\n  fetchProjectInfo,\r\n};\r\n\r\nexport default projectInfoSlice;\r\n","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\utils\\sleep.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\app\\rootReducer.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\hooks\\useCheckResponseStatus.ts",["219"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst useCheckResponseStatus = (activeStatus: { statusCode?: number }[]) => {\r\n  const [isServerError, setIsServerError] = useState<boolean>(false);\r\n  const [isRequestError, setIsRequestError] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    let isRequestErrorContains = false;\r\n    let isServerErrorContains = false;\r\n    activeStatus.forEach((el) => {\r\n      if (!el.statusCode) return;\r\n      if (el.statusCode >= 500 && el.statusCode < 600) {\r\n        isServerErrorContains = true;\r\n      }\r\n      if (el.statusCode >= 400 && el.statusCode < 500) {\r\n        isRequestErrorContains = true;\r\n      }\r\n      setIsServerError(isServerErrorContains);\r\n      setIsRequestError(isRequestErrorContains);\r\n    });\r\n  }, [activeStatus]);\r\n\r\n  return { isServerError, isRequestError };\r\n};\r\n\r\nexport default useCheckResponseStatus;\r\n",["220","221"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\components\\ChartContainer.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\api\\api.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\DataInfoList.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ErrorContainer.tsx",[],["222","223"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\LineChartWrapper.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\Label.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ChartTitle.styled.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\utils\\setLastFetchTime.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\RacingBarChartWrapper.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\index.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\app\\store.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\InformaticsChart\\InformaticsChart.tsx",["224"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\hooks\\useMapColor.ts",["225"],"import { RootState } from \"app/rootReducer\";\r\nimport { getPercentage } from \"common/utils/getPercentage\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const colors = [\r\n  \"rgb(33, 121, 238)\",\r\n  \"rgb(0, 204, 154)\",\r\n  \"rgb(255, 103, 89)\",\r\n  \"rgb(240, 185, 91)\",\r\n  \"rgb(117, 55, 239)\",\r\n  \"rgb(211, 55, 239)\",\r\n  \"rgb(221, 239, 55)\",\r\n];\r\n\r\nconst useMapColor = () => {\r\n  const exceptions = useSelector((state: RootState) => state.exceptionSerise);\r\n  const [lineTypeData, setLineTypeData] = useState<\r\n    { color: string; name: string }[]\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    const careateNewLineTypeData = (\r\n      data?: { key: string; value: any[] }[]\r\n    ): { color: string; name: string }[] => {\r\n      if (!data) return [];\r\n      return data.map((el, i) => {\r\n        return {\r\n          color: colors[i % colors.length],\r\n          name: `${el.key}(${getPercentage(\r\n            el.value.length,\r\n            exceptions.value?.total!\r\n          )}%)`,\r\n        };\r\n      });\r\n    };\r\n    setLineTypeData(careateNewLineTypeData(exceptions.value?.records));\r\n  }, [exceptions.value?.total]);\r\n\r\n  return lineTypeData;\r\n};\r\n\r\nexport default useMapColor;\r\n","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ChartErrorWrapper.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\components\\ChartContainer.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\styles\\theme.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\LineChart.tsx",["226","227","228","229"],"import React, { useEffect, useMemo, useRef } from \"react\";\r\nimport ChartContainer from \"./components/ChartContainer\";\r\nimport useResizeObserver from \"common/hooks/useResizeObserver\";\r\nimport {\r\n  area,\r\n  axisBottom,\r\n  axisLeft,\r\n  line,\r\n  max,\r\n  scaleBand,\r\n  scaleLinear,\r\n  select,\r\n} from \"d3\";\r\nimport moment from \"moment\";\r\n\r\ninterface LineChartProps {\r\n  data: { today: [number, number][]; yesterday: [number, number][] };\r\n  id: string;\r\n}\r\n\r\nconst LineChart: React.FC<LineChartProps> = ({ data, id }) => {\r\n  const svgRef = useRef<SVGSVGElement>(null);\r\n  const chartContainer = useRef<HTMLDivElement>(null);\r\n  const dimensions = useResizeObserver(chartContainer);\r\n\r\n  const today = useMemo(() => {\r\n    return data.today.map(mapUnix).filter(filter5Min);\r\n  }, [data.today]);\r\n\r\n  const yesterday = useMemo(() => {\r\n    return data.yesterday.map(mapUnix).filter(filter5Min);\r\n  }, [data.yesterday]);\r\n\r\n  function filter5Min({ time }: ReturnType<typeof mapUnix>) {\r\n    return time.minute() % 5 === 0 && time.second() === 0;\r\n  }\r\n\r\n  function mapUnix([unix, value]: [number, number]) {\r\n    const time = moment.unix(unix / 1000);\r\n    const xTick = time.format(\"HH:mm\");\r\n    return { time, value, xTick };\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!dimensions) return;\r\n    const svg = select(svgRef.current);\r\n    const { width, height } = dimensions;\r\n\r\n    const xScale = scaleBand()\r\n      .domain(yesterday.map((el) => el.xTick))\r\n      .range([35, width]);\r\n\r\n    const yScale = scaleLinear()\r\n      .domain([\r\n        Math.max(\r\n          max(today, (el) => el.value * 1.2) || 0,\r\n          max(yesterday, (el) => el.value * 1.2) || 0\r\n        ),\r\n        0,\r\n      ])\r\n      .range([0, height]);\r\n\r\n    // Line\r\n    const lineGenerator = line<{ value: number; xTick: string }>()\r\n      .x((d) => xScale(d.xTick) || 0)\r\n      .y((d) => yScale(d.value) || 0);\r\n\r\n    svg\r\n      .selectAll(`.${id}_today`)\r\n      .data([today])\r\n      .join(\"path\")\r\n      .attr(\"class\", `${id}_today`)\r\n      .transition()\r\n      .duration(750)\r\n      .attr(\"d\", lineGenerator);\r\n\r\n    svg\r\n      .selectAll(`.${id}_yesterday`)\r\n      .data([yesterday])\r\n      .join(\"path\")\r\n      .attr(\"class\", `${id}_yesterday`)\r\n      .transition()\r\n      .duration(750)\r\n      .attr(\"d\", lineGenerator);\r\n\r\n    const calcArea = area<{ xTick: string; value: number }>()\r\n      .x((d) => xScale(d.xTick) || 0)\r\n      .y0((d) => yScale(d.value))\r\n      .y1(height);\r\n\r\n    //Area\r\n    svg\r\n      .selectAll(\".today_area\")\r\n      .data([today])\r\n      .join(\"path\")\r\n      .attr(\"class\", \"today_area\")\r\n      .attr(\"d\", calcArea);\r\n\r\n    svg\r\n      .selectAll(\".yesterday_area\")\r\n      .data([yesterday])\r\n      .join(\"path\")\r\n      .attr(\"class\", \"yesterday_area\")\r\n      .attr(\"d\", calcArea);\r\n\r\n    //Axis\r\n    const yAxis = axisLeft(yScale).ticks(5);\r\n    svg.select(\".y-axis\").remove();\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"class\", \"y-axis\")\r\n      .attr(\"transform\", `translate(35,0)`)\r\n      .call(yAxis);\r\n\r\n    const xAxis = axisBottom(xScale).tickValues(\r\n      [\"03:00\", \"06:00\", \"09:00\", \"12:00\", \"15:00\", \"18:00\", \"21:00\"].filter(\r\n        (el, i) => {\r\n          if (width > 700) return true;\r\n          if (width > 500) return i % 2 === 0;\r\n          if (width > 200) return i % 3 === 0;\r\n        }\r\n      )\r\n    );\r\n    svg.select(\".x-axis\").remove();\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"class\", \"x-axis\")\r\n      .attr(\"transform\", `translate(0,${height})`)\r\n      .call(xAxis);\r\n\r\n    //tooptip\r\n    const tooltip = svg.select(\"#tooltip\");\r\n    const todayTip = svg.select(\".tooltip_today\");\r\n    const yesterdayTip = svg.select(\".tooltip_yesterday\");\r\n    const timeTip = svg.select(\".tooltip_time\");\r\n    const tooltipLine = svg.select(\".y_line\");\r\n\r\n    svg\r\n      .selectAll(\".content\")\r\n      .join(\"rect\")\r\n      .attr(\"class\", \"content\")\r\n      .attr(\"width\", width - 35)\r\n      .attr(\"transform\", `translate(35,0)`)\r\n      .attr(\"height\", height)\r\n      .attr(\"fill\", \"transparent\")\r\n      .on(\"mousemove\", drawToolTip)\r\n      .on(\"mouseout\", removeToolTip);\r\n\r\n    function drawToolTip(e: MouseEvent) {\r\n      const eachBand = xScale.step();\r\n      const index = Math.round((e.x - 68) / eachBand);\r\n      const xDomain = xScale.domain()[index + 1];\r\n\r\n      tooltipLine\r\n        .join(\"line\")\r\n        .attr(\"class\", \"y_line\")\r\n        .attr(\"stroke\", \"black\")\r\n        .transition()\r\n        .duration(10)\r\n        .attr(\"x1\", xScale(xDomain) || 0)\r\n        .attr(\"x2\", xScale(xDomain) || 0)\r\n        .attr(\"y1\", 0)\r\n        .attr(\"y2\", height);\r\n\r\n      const yesterdayValue = yesterday.find((el) => el.xTick === xDomain);\r\n      const todayValue = today.find((el) => el.xTick === xDomain);\r\n      const x = e.pageX - 15 + \"px\";\r\n      const topDistance = chartContainer.current?.getBoundingClientRect().top;\r\n      const yNum = e.pageY - (topDistance || 0);\r\n\r\n      tooltip\r\n        .attr(\"x\", x)\r\n        .attr(\"y\", e.y + \"px\")\r\n        .style(\"display\", \"block\");\r\n\r\n      timeTip\r\n        .text(yesterdayValue?.time.format(\"h:mm a\") || \"\")\r\n        .attr(\"x\", x)\r\n        .attr(\"y\", yNum + 10 + \"px\");\r\n\r\n      yesterdayTip\r\n        .text(\"yesterday:\" + yesterdayValue?.value || \"\")\r\n        .attr(\"x\", x)\r\n        .attr(\"y\", yNum + 25 + \"px\");\r\n\r\n      todayTip\r\n        .text(todayValue ? \"today:\" + todayValue?.value : \"\")\r\n        .attr(\"x\", x)\r\n        .attr(\"y\", yNum + 40 + \"px\");\r\n    }\r\n\r\n    function removeToolTip() {\r\n      if (tooltip) tooltip.style(\"display\", \"none\");\r\n      if (tooltipLine) tooltipLine.attr(\"stroke\", \"none\");\r\n    }\r\n  }, [dimensions, data]);\r\n\r\n  return (\r\n    <ChartContainer ref={chartContainer} id={id}>\r\n      <svg ref={svgRef}>\r\n        <path className=\"today_area\" />\r\n        <path className=\"yesterday_area\" />\r\n        <g className=\"x-axis\" />\r\n        <g className=\"y-axis\" />\r\n        <line className=\"y_line\" />\r\n        <rect className=\"content\" />\r\n        <text id=\"tooltip\">\r\n          <tspan className=\"tooltip_time\"></tspan>\r\n          <tspan className=\"tooltip_yesterday\"></tspan>\r\n          <tspan className=\"tooltip_today\"></tspan>\r\n        </text>\r\n      </svg>\r\n    </ChartContainer>\r\n  );\r\n};\r\n\r\nexport default React.memo(LineChart, () => false);\r\n","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ChartContainer.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\hooks\\useGetData.ts",["230"],"import moment from \"moment\";\r\nimport { RootState } from \"app/rootReducer\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actions } from \"../ExecptionSlice\";\r\n\r\nconst useGetData = () => {\r\n  const exceptions = useSelector((state: RootState) => state.exceptionSerise);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchData = () => {\r\n    const stime =\r\n      exceptions.lastTime ||\r\n      moment().subtract(1, \"days\").startOf(\"day\").unix() * 1000;\r\n    dispatch(\r\n      actions.fetchExceptionSerise({\r\n        stime,\r\n        etime: Date.now(),\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const intervalId = setTimeout(fetchData, 5000);\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [exceptions]);\r\n};\r\n\r\nexport default useGetData;\r\n","C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\components\\ErrorFooter.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\common\\utils\\getPercentage.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\DonutChartWrapper.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\ExecptionSlice.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\HalfDonutChart\\HalfDonutChart.tsx",["231"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\HalfDonutChart\\HalfDonutChartWrapper.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\HalfDonutChart\\CpuUsageRateSlice.ts",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\HalfDonutChart\\hook\\useGetData.ts",["232"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\HalfDonutChart\\components\\ChartContainer.tsx",[],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\DonutChart\\DonutChart.tsx",["233"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\LineChart\\hook\\useGetData.ts",["234","235"],"C:\\Users\\apple\\Desktop\\wwww\\front-test\\src\\features\\RacingBarChart\\hook\\useGetData.ts",["236"],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":31},{"ruleId":"241","severity":1,"message":"245","line":4,"column":10,"nodeType":"243","messageId":"244","endLine":4,"endColumn":26},{"ruleId":"237","replacedBy":"246"},{"ruleId":"239","replacedBy":"247"},{"ruleId":"237","replacedBy":"248"},{"ruleId":"239","replacedBy":"249"},{"ruleId":"237","replacedBy":"250"},{"ruleId":"239","replacedBy":"251"},{"ruleId":"241","severity":1,"message":"252","line":2,"column":8,"nodeType":"243","messageId":"244","endLine":2,"endColumn":24},{"ruleId":"241","severity":1,"message":"253","line":3,"column":8,"nodeType":"243","messageId":"244","endLine":3,"endColumn":29},{"ruleId":"241","severity":1,"message":"254","line":4,"column":8,"nodeType":"243","messageId":"244","endLine":4,"endColumn":24},{"ruleId":"241","severity":1,"message":"255","line":5,"column":8,"nodeType":"243","messageId":"244","endLine":5,"endColumn":28},{"ruleId":"237","replacedBy":"256"},{"ruleId":"239","replacedBy":"257"},{"ruleId":"241","severity":1,"message":"258","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":19},{"ruleId":"241","severity":1,"message":"242","line":4,"column":10,"nodeType":"243","messageId":"244","endLine":4,"endColumn":31},{"ruleId":"241","severity":1,"message":"245","line":5,"column":10,"nodeType":"243","messageId":"244","endLine":5,"endColumn":26},{"ruleId":"241","severity":1,"message":"259","line":6,"column":10,"nodeType":"243","messageId":"244","endLine":6,"endColumn":15},{"ruleId":"241","severity":1,"message":"260","line":1,"column":8,"nodeType":"243","messageId":"244","endLine":1,"endColumn":13},{"ruleId":"237","replacedBy":"261"},{"ruleId":"239","replacedBy":"262"},{"ruleId":"237","replacedBy":"263"},{"ruleId":"239","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":21,"column":6,"nodeType":"267","endLine":21,"endColumn":8,"suggestions":"268"},{"ruleId":"265","severity":1,"message":"269","line":38,"column":6,"nodeType":"267","endLine":38,"endColumn":31,"suggestions":"270"},{"ruleId":"265","severity":1,"message":"271","line":28,"column":6,"nodeType":"267","endLine":28,"endColumn":18,"suggestions":"272"},{"ruleId":"265","severity":1,"message":"271","line":32,"column":6,"nodeType":"267","endLine":32,"endColumn":22,"suggestions":"273"},{"ruleId":"274","severity":1,"message":"275","line":117,"column":17,"nodeType":"276","messageId":"277","endLine":117,"endColumn":19},{"ruleId":"265","severity":1,"message":"278","line":196,"column":6,"nodeType":"267","endLine":196,"endColumn":24,"suggestions":"279"},{"ruleId":"265","severity":1,"message":"280","line":29,"column":6,"nodeType":"267","endLine":29,"endColumn":18,"suggestions":"281"},{"ruleId":"265","severity":1,"message":"282","line":106,"column":6,"nodeType":"267","endLine":106,"endColumn":24,"suggestions":"283"},{"ruleId":"265","severity":1,"message":"280","line":13,"column":6,"nodeType":"267","endLine":13,"endColumn":8,"suggestions":"284"},{"ruleId":"265","severity":1,"message":"285","line":50,"column":6,"nodeType":"267","endLine":50,"endColumn":24,"suggestions":"286"},{"ruleId":"265","severity":1,"message":"280","line":20,"column":6,"nodeType":"267","endLine":20,"endColumn":21,"suggestions":"287"},{"ruleId":"265","severity":1,"message":"266","line":29,"column":6,"nodeType":"267","endLine":29,"endColumn":8,"suggestions":"288"},{"ruleId":"265","severity":1,"message":"266","line":14,"column":6,"nodeType":"267","endLine":14,"endColumn":8,"suggestions":"289"},"no-native-reassign",["290"],"no-negated-in-lhs",["291"],"@typescript-eslint/no-unused-vars","'awiatAnotherFetchDone' is defined but never used.","Identifier","unusedVar","'setLastFetchTime' is defined but never used.",["290"],["291"],["290"],["291"],["290"],["291"],"'InformaticsChart' is defined but never used.","'RacingBarChartWrapper' is defined but never used.","'LineChartWrapper' is defined but never used.","'DonutBarChartWrapper' is defined but never used.",["290"],["291"],"'FetchTime' is defined but never used.","'sleep' is defined but never used.","'React' is defined but never used.",["290"],["291"],["290"],["291"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["292"],"React Hook useEffect has a missing dependency: 'exceptions.value?.records'. Either include it or remove the dependency array.",["293"],"React Hook useMemo has a missing dependency: 'filter5Min'. Either include it or remove the dependency array.",["294"],["295"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'id', 'today', and 'yesterday'. Either include them or remove the dependency array.",["296"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["297"],"React Hook useEffect has missing dependencies: 'colors.background', 'colors.main', 'colors.safe', 'colors.urgent', 'colors.warning', and 'max'. Either include them or remove the dependency array.",["298"],["299"],"React Hook useEffect has a missing dependency: 'colors'. Either include it or remove the dependency array.",["300"],["301"],["302"],["303"],"no-global-assign","no-unsafe-negation",{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"304","fix":"324"},{"desc":"304","fix":"325"},"Update the dependencies array to be: [dispatch]",{"range":"326","text":"327"},"Update the dependencies array to be: [exceptions.value?.records, exceptions.value?.total]",{"range":"328","text":"329"},"Update the dependencies array to be: [data.today, filter5Min]",{"range":"330","text":"331"},"Update the dependencies array to be: [data.yesterday, filter5Min]",{"range":"332","text":"333"},"Update the dependencies array to be: [dimensions, data, yesterday, today, id]",{"range":"334","text":"335"},"Update the dependencies array to be: [exceptions, fetchData]",{"range":"336","text":"337"},"Update the dependencies array to be: [colors.background, colors.main, colors.safe, colors.urgent, colors.warning, data, dimensions, max]",{"range":"338","text":"339"},"Update the dependencies array to be: [fetchData]",{"range":"340","text":"341"},"Update the dependencies array to be: [colors, data, dimensions]",{"range":"342","text":"343"},"Update the dependencies array to be: [activeVisitor, fetchData]",{"range":"344","text":"345"},{"range":"346","text":"327"},{"range":"347","text":"327"},[748,750],"[dispatch]",[1130,1155],"[exceptions.value?.records, exceptions.value?.total]",[775,787],"[data.today, filter5Min]",[895,911],"[data.yesterday, filter5Min]",[5587,5605],"[dimensions, data, yesterday, today, id]",[788,800],"[exceptions, fetchData]",[2891,2909],"[colors.background, colors.main, colors.safe, colors.urgent, colors.warning, data, dimensions, max]",[354,356],"[fetchData]",[1525,1543],"[colors, data, dimensions]",[622,637],"[activeVisitor, fetchData]",[842,844],[416,418]]